#version 400
layout(triangles, equal_spacing, cw) in;

in vec3 tcPosition[];

uniform mat4 M;
uniform mat4 V;
uniform mat4 P;

out vec3 tePosition;
out vec3 tePatchDistance;


void main() {
	vec3 p0 = gl_TessCoord.x * tcPosition[0];
	vec3 p1 = gl_TessCoord.y * tcPosition[1];
	vec3 p2 = gl_TessCoord.z * tcPosition[2];

	tePatchDistance = gl_TessCoord;
	tePosition = normalize(p0 + p1 + p2);

	mat4 MVP = P * V * M;
	gl_Position = MVP * vec4(tePosition, 1.0f);
}